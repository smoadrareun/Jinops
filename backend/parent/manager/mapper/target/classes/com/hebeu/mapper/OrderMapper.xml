<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hebeu.mapper.OrderMapper">

    <resultMap id="OrderResultMap" type="com.hebeu.model.OrderModel">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="cliId" jdbcType="INTEGER" property="cliId" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="phone" jdbcType="BIGINT" property="phone" />
        <result column="address" jdbcType="VARCHAR" property="address" />
        <result column="date" jdbcType="TIMESTAMP" property="date" />
        <result column="price" jdbcType="DECIMAL" property="price" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="status" jdbcType="TINYINT" property="status" />
        <collection property="comInfo" javaType="java.util.ArrayList" ofType="com.hebeu.model.OrderModel$ComInfo"
                    select="queryComInfo" column="id" />
    </resultMap>

    <resultMap id="StandardResultMap" type="com.hebeu.model.OrderModel$ComInfo">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="ordId" jdbcType="VARCHAR" property="ordId" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="specName" jdbcType="VARCHAR" property="specName" />
        <result column="num" jdbcType="INTEGER" property="num" />
        <result column="price" jdbcType="DECIMAL" property="price" />
    </resultMap>

    <select id="queryComInfo" parameterType="java.lang.String" resultMap="StandardResultMap">
        SELECT *
        FROM comInfo
        WHERE ordId = #{id,jdbcType=VARCHAR}
    </select>

    <select id="selectOrdersAll" resultMap="OrderResultMap">
        SELECT *
        FROM `order`
    </select>

    <select id="selectOrderById" parameterType="java.lang.String" resultMap="OrderResultMap">
        SELECT *
        FROM `order`
        WHERE id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="find" parameterType="java.util.Map" resultMap="OrderResultMap">
        SELECT *
        FROM `order`
        <where>
            <if test="id != null">
                AND id = #{id,jdbcType=VARCHAR}
            </if>
            <if test="cliId != null">
                AND cliId = #{cliId,jdbcType=INTEGER}
            </if>
            <if test="name != null">
                AND `name` = #{name,jdbcType=VARCHAR}
            </if>
            <if test="phone != null">
                AND phone = #{phone,jdbcType=BIGINT}
            </if>
            <if test="address != null">
                AND address = #{address,jdbcType=VARCHAR}
            </if>
            <if test="date != null">
                AND `date` = #{date,jdbcType=TIMESTAMP}
            </if>
            <if test="price != null">
                AND price = #{price,jdbcType=DECIMAL}
            </if>
            <if test="remark != null">
                AND remark = #{remark,jdbcType=VARCHAR}
            </if>
            <if test="status != null">
                AND status = #{status,jdbcType=INTEGER}
            </if>
        </where>
    </select>

    <select id="search" parameterType="java.util.Map" resultMap="OrderResultMap">
        SELECT *
        FROM `order`
        <where>
            <if test="id != null">
                AND id LIKE CONCAT('%',#{id,jdbcType=VARCHAR},'%')
            </if>
            <if test="cliId != null">
                AND cliId LIKE CONCAT('%',#{cliId,jdbcType=INTEGER},'%')
            </if>
            <if test="name != null">
                AND `name` LIKE CONCAT('%',#{name,jdbcType=VARCHAR},'%')
            </if>
            <if test="phone != null">
                AND phone LIKE CONCAT('%',#{phone,jdbcType=BIGINT},'%')
            </if>
            <if test="address != null">
                AND address LIKE CONCAT('%',#{address,jdbcType=VARCHAR},'%')
            </if>
            <if test="date != null">
                AND `date` LIKE CONCAT('%',#{date,jdbcType=TIMESTAMP},'%')
            </if>
            <if test="price != null">
                AND price LIKE CONCAT('%',#{price,jdbcType=DECIMAL},'%')
            </if>
            <if test="remark != null">
                AND remark LIKE CONCAT('%',#{remark,jdbcType=VARCHAR},'%')
            </if>
            <if test="status != null">
                AND status LIKE CONCAT('%',#{status,jdbcType=INTEGER},'%')
            </if>
        </where>
    </select>

    <insert id="insert" keyColumn="id" parameterType="java.util.Map" keyProperty="id">
        INSERT INTO `order`
            (id, cliId, `name`, phone, address, `date`, price, remark, status)
        VALUES(#{id,jdbcType=INTEGER}, #{cliId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
               #{phone,jdbcType=BIGINT}, #{address,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP},
               #{price,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
    </insert>

    <insert id="insertComInfo" keyColumn="id" parameterType="java.util.Map" keyProperty="id">
        INSERT INTO comInfo
        (id, ordId, `name`, specName, num, price)
        VALUES
        <foreach collection="comInfo" item="item" index="index" separator=",">
            (#{item.id,jdbcType=VARCHAR}, #{item.ordId,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR},
            #{item.specName,jdbcType=VARCHAR}, #{item.num,jdbcType=INTEGER},#{item.price,jdbcType=DECIMAL})
        </foreach>
    </insert>

    <delete id="delete" parameterType="java.lang.String">
        DELETE
        FROM `order`
        WHERE id = #{id,jdbcType=VARCHAR}
    </delete>

    <delete id="deleteComInfo" parameterType="java.lang.String">
        DELETE
        FROM comInfo
        WHERE id = #{id,jdbcType=VARCHAR}
    </delete>

    <update id="update" keyColumn="id" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="id">
        UPDATE `order`
        <set>
            <if test="cliId != null">
                cliId = #{cliId,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=BIGINT},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="date != null">
                `date` = #{date,jdbcType=TIMESTAMP},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        WHERE id = #{id,jdbcType=VARCHAR};
    </update>

    <update id="updateComInfo" keyColumn="id" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="id">
        <foreach collection="comInfo" item="item" index="index" separator=";">
            UPDATE comInfo
            <set>
                <if test="item.ordId != null">
                    ordId = #{item.ordId,jdbcType=VARCHAR},
                </if>
                <if test="item.name != null">
                    `name` = #{item.name,jdbcType=VARCHAR},
                </if>
                <if test="item.specName != null">
                    phone = #{item.specName,jdbcType=VARCHAR},
                </if>
                <if test="item.num != null">
                    address= #{item.num,jdbcType=INTEGER},
                </if>
                <if test="item.price != null">
                    postcode = #{item.price,jdbcType=DECIMAL},
                </if>
            </set>
            WHERE id = #{item.id,jdbcType=VARCHAR}
        </foreach>
    </update>

    <select id="query" parameterType="java.util.Map" resultMap="OrderResultMap">
        SELECT *
        FROM `order`
        <where>
            <if test="cliId != '' and cliId != null">
                AND cliId = #{cliId,jdbcType=INTEGER}
            </if>
            <if test="sname != '' and sname != null">
                AND `name` LIKE CONCAT('%',#{sname,jdbcType=VARCHAR},'%')
            </if>
            <if test="min != '' and min != null">
                AND price &gt;= #{min,jdbcType=DECIMAL}
            </if>
            <if test="max != '' and max != null">
                AND price &lt;= #{max,jdbcType=DECIMAL}
            </if>
            <if test="start != '' and start != null">
                AND `date` &gt;= #{start,jdbcType=BIGINT}
            </if>
            <if test="end != '' and end != null">
                AND `date` &lt;= #{end,jdbcType=BIGINT}
            </if>
        </where>
        <if test="sort == '1'.toString() ">
            ORDER BY `date` ASC
        </if>
        <if test="sort == '2'.toString() ">
            ORDER BY `date` DESC
        </if>
        <if test="sort == '3'.toString() ">
            ORDER BY price ASC
        </if>
        <if test="sort == '4'.toString() ">
            ORDER BY price DESC
        </if>
        <if test="page != null and count!='' and count != null">
            LIMIT #{page,jdbcType=INTEGER}, ${count}
        </if>
    </select>
</mapper>