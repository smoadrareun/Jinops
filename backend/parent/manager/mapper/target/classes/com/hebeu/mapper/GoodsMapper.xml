<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hebeu.mapper.GoodsMapper">

    <resultMap id="GoodsResultMap" type="com.hebeu.model.GoodsModel">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="price" jdbcType="DECIMAL" property="price" />
        <result column="num" jdbcType="INTEGER" property="num" />
        <result column="sold" jdbcType="INTEGER" property="sold" />
        <result column="pic" jdbcType="LONGVARCHAR" property="pic" />
        <result column="kind" jdbcType="VARCHAR" property="kind" />
        <result column="info" jdbcType="VARCHAR" property="info" />
        <result column="off" jdbcType="TINYINT" property="off" />
        <collection property="specInfo" javaType="java.util.ArrayList" ofType="com.hebeu.model.GoodsModel$SpecInfo"
                    select="querySpecInfo" column="id" />
    </resultMap>

    <resultMap id="StandardResultMap" type="com.hebeu.model.GoodsModel$SpecInfo">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="gooId" jdbcType="INTEGER" property="gooId" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="price" jdbcType="DECIMAL" property="price" />
        <result column="num" jdbcType="INTEGER" property="num" />
    </resultMap>

    <select id="querySpecInfo" parameterType="java.lang.Integer" resultMap="StandardResultMap">
        SELECT *
        FROM specInfo
        WHERE gooId = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectGoodsAll" resultMap="GoodsResultMap">
        SELECT *
        FROM goods
    </select>

    <select id="selectGoodById" parameterType="java.lang.Integer" resultMap="GoodsResultMap">
        SELECT *
        FROM goods
        WHERE id = #{id,jdbcType=INTEGER}
    </select>

    <select id="find" parameterType="java.util.Map" resultMap="GoodsResultMap">
        SELECT *
        FROM goods
        <where>
            <if test="id != null">
                AND id = #{id,jdbcType=INTEGER}
            </if>
            <if test="name != null">
                AND `name` = #{name,jdbcType=VARCHAR}
            </if>
            <if test="price != null">
                AND price = #{price,jdbcType=DECIMAL}
            </if>
            <if test="num != null">
                AND num = #{num,jdbcType=INTEGER}
            </if>
            <if test="sold != null">
                AND sold = #{sold,jdbcType=INTEGER}
            </if>
            <if test="pic != null">
                AND pic = #{pic,jdbcType=LONGVARCHAR}
            </if>
            <if test="kind != null">
                AND kind = #{kind,jdbcType=VARCHAR}
            </if>
            <if test="info != null">
                AND info = #{info,jdbcType=VARCHAR}
            </if>
            <if test="off != null">
                AND off = #{off,jdbcType=TINYINT}
            </if>
        </where>
    </select>

    <select id="search" parameterType="java.util.Map" resultMap="GoodsResultMap">
        SELECT *
        FROM goods
        <where>
            <if test="id != null">
                AND id LIKE CONCAT('%',#{id,jdbcType=INTEGER},'%')
            </if>
            <if test="name != null">
                AND `name` LIKE CONCAT('%',#{name,jdbcType=VARCHAR},'%')
            </if>
            <if test="price != null">
                AND price LIKE CONCAT('%',#{price,jdbcType=DECIMAL},'%')
            </if>
            <if test="num != null">
                AND num LIKE CONCAT('%',#{num,jdbcType=INTEGER},'%')
            </if>
            <if test="sold != null">
                AND sold LIKE CONCAT('%',#{sold,jdbcType=INTEGER},'%')
            </if>
            <if test="pic != null">
                AND pic LIKE CONCAT('%',#{pic,jdbcType=LONGVARCHAR},'%')
            </if>
            <if test="kind != null">
                AND kind LIKE CONCAT('%',#{kind,jdbcType=VARCHAR},'%')
            </if>
            <if test="info != null">
                AND info LIKE CONCAT('%',#{info,jdbcType=VARCHAR},'%')
            </if>
            <if test="off != null">
                AND off LIKE CONCAT('%',#{off,jdbcType=TINYINT},'%')
            </if>
        </where>
    </select>

    <insert id="insert" keyColumn="id" parameterType="java.util.Map" keyProperty="id">
        INSERT INTO goods
            (id, `name`, price, num, sold, pic, kind, info, off)
        VALUES(#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL},
            #{num,jdbcType=INTEGER}, #{sold,jdbcType=INTEGER}, #{pic,jdbcType=LONGVARCHAR},
            #{kind,jdbcType=VARCHAR}, #{info,jdbcType=VARCHAR}, #{off,jdbcType=TINYINT})
    </insert>

    <insert id="insertSpecInfo" keyColumn="id" parameterType="java.util.Map" keyProperty="id">
        INSERT INTO specInfo
        (id, gooId, `type`, `name`, price, num)
        VALUES
        <foreach collection="specInfo" item="item" index="index" separator=",">
            (#{item.id,jdbcType=VARCHAR}, #{item.gooId,jdbcType=INTEGER}, #{item.type,jdbcType=VARCHAR},
            #{item.name,jdbcType=VARCHAR}, #{item.price,jdbcType=DECIMAL}, #{item.num,jdbcType=INTEGER})
        </foreach>
    </insert>

    <delete id="delete" parameterType="java.lang.Integer">
        DELETE
        FROM goods
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>

    <delete id="deleteSpecInfo" parameterType="java.lang.String">
        DELETE
        FROM specInfo
        WHERE id = #{id,jdbcType=VARCHAR}
    </delete>

    <update id="update" keyColumn="id" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="id">
        UPDATE goods
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="num != null">
                num = #{num,jdbcType=INTEGER},
            </if>
            <if test="sold != null">
                sold = #{sold,jdbcType=INTEGER},
            </if>
            <if test="pic != null">
                pic = #{pic,jdbcType=LONGVARCHAR},
            </if>
            <if test="kind != null">
                kind = #{kind,jdbcType=VARCHAR},
            </if>
            <if test="info != null">
                info = #{info,jdbcType=VARCHAR},
            </if>
            <if test="off != null">
                off = #{off,jdbcType=TINYINT},
            </if>
        </set>
        WHERE id = #{id,jdbcType=INTEGER};
    </update>

    <update id="updateSpecInfo" keyColumn="id" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="id">
        <foreach collection="specInfo" item="item" index="index" separator=";">
            UPDATE specInfo
            <set>
                <if test="item.gooId != null">
                    gooId = #{item.gooId,jdbcType=INTEGER},
                </if>
                <if test="item.type != null">
                    `type` = #{item.type,jdbcType=VARCHAR},
                </if>
                <if test="item.name != null">
                    `name` = #{item.name,jdbcType=VARCHAR},
                </if>
                <if test="item.price != null">
                    price= #{item.price,jdbcType=DECIMAL},
                </if>
                <if test="item.num != null">
                    num = #{item.num,jdbcType=INTEGER},
                </if>
            </set>
            WHERE id = #{item.id,jdbcType=VARCHAR}
        </foreach>
    </update>

    <select id="query" parameterType="java.util.Map" resultMap="GoodsResultMap">
        SELECT *
        FROM goods
        <where>
            <if test="sname != '' and sname != null">
                AND `name` LIKE CONCAT('%',#{sname,jdbcType=VARCHAR},'%')
            </if>
            <if test="min != '' and min != null">
                AND price &gt;= #{min,jdbcType=DECIMAL}
            </if>
            <if test="max != '' and max != null">
                AND price &lt;= #{max,jdbcType=DECIMAL}
            </if>
            <if test="off == '1'.toString()">
                AND off = false
            </if>
            <if test="off == '2'.toString()">
                AND off = true
            </if>
            <if test="num == '0'.toString()">
                AND num &gt; 0
            </if>
        </where>
        <if test="sort == '1'.toString() ">
            ORDER BY price ASC
        </if>
        <if test="sort == '2'.toString() ">
            ORDER BY price DESC
        </if>
        <if test="sort == '3'.toString() ">
            ORDER BY sold ASC
        </if>
        <if test="sort == '4'.toString() ">
            ORDER BY sold DESC
        </if>
        <if test="page != null and count!='' and count != null">
            LIMIT #{page,jdbcType=INTEGER}, ${count}
        </if>
    </select>
</mapper>